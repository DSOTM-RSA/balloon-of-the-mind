order_bars <- function(df,facetPanel,barCategory,value){
df %>% mutate_(barCategory=reorder(barCategory,value)) %>%
group_by_(facetPanel) %>%
top_n(10,abs(value)) %>%
group_by_(facetPanel,barCategory) %>%
arrange_(desc(value)) %>%
ungroup_() %>%
mutate_(barCategory = factor(paste(barCategory,facetPanel, sep = "__"),
levels=rev(paste(barCategory,facetPanel,sep="__"))))
}
set_words<-negated_words %>%
mutate(contribution = n * score)
outside_result<- "set_words" %>%
mutate_("word2"=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_("word2" = factor(paste("word2","word1", sep = "__"),
levels=rev(paste("word2","word1",sep="__"))))
outside_result<- set_words %>%
mutate_("word2"=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_("word2" = factor(paste("word2","word1", sep = "__"),
levels=rev(paste("word2","word1",sep="__"))))
inside_result<-order_bars(set_words,"set_words$word1","set_words$word2","set_words$contribution")
inside_result<-order_bars(set_words,"word1","word2","contribution")
outside_result<- set_words %>%
mutate_(word2=reorder(word2,contribution)) %>%
group_by_(word1) %>%
top_n_(10,abs(contribution)) %>%
group_by_(word1,word2) %>%
arrange_(desc(contribution)) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2",contribution)) %>%
group_by_(word1) %>%
top_n_(10,abs(contribution)) %>%
group_by_(word1,word2) %>%
arrange_(desc(contribution)) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_(word1) %>%
top_n_(10,abs(contribution)) %>%
group_by_(word1,word2) %>%
arrange_(desc(contribution)) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs(contribution)) %>%
group_by_(word1,word2) %>%
arrange_(desc(contribution)) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_(word1,word2) %>%
arrange_(desc(contribution)) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_("word2" = factor(paste("word2","word1", sep = "__"),
levels=rev(paste("word2","word1",sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_("word2" = factor(paste("word2","word1", sep = "__"),
levels=rev(paste("word2","word1",sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_("word2" = factor(paste("word2","word1", sep = "__"),
levels=rev(paste("word2","word1",sep="__"))))
order_bars_SE <- function(df, facetPanel, barCategory, value){
require(lazyeval)
df %>%
mutate_(barCategory = interp(~reorder(x, y), x = as.name(barCategory),
y = as.name(value))) %>%
group_by_(facetPanel) %>%
filter_(interp(~min_rank(desc(abs(x))) <= 10, x = as.name(value))) %>%
group_by_(facetPanel, barCategory) %>%
arrange_(interp(~desc(x), x = as.name(value))) %>%
ungroup() %>%
mutate_(barCategory = interp(
~factor(paste(x, y, sep = "__"), levels = rev(paste(x, y, sep = "__"))),
x = as.name(barCategory), y = as.name(facetPanel)))
}
inside_result<-order_bars_SE(set_words,"word1","word2","contribution")
View(inside_result)
View(a)
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_("word2" = factor(paste("word2","word1", sep = "__"),
levels=rev(paste("word2","word1",sep="__"))))
outside_result<- set_words %>%
mutate(word2=reorder(word2,contribution)) %>%
group_by_(word1) %>%
top_n_(10,abs(contribution)) %>%
group_by_(word1,word2) %>%
arrange_(desc(contribution)) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate(word2=reorder(word2,contribution)) %>%
group_by(word1) %>%
top_n(10,abs(contribution)) %>%
group_by(word1,word2) %>%
arrange(desc(contribution)) %>%
ungroup() %>%
mutate(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
View(outside_result)
View(inside_result)
View(outside_result)
View(inside_result)
set_words<-dput(set_words)
set<-dput(set_words)
ggplot(aes(word2, contribution, fill = n * score > 0),data = inside_result) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ word1, scales = "free") +
xlab("Words preceded by negation") +
ylab("Sentiment score * # of occurrences") +
theme_bw() +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) #5
ggplot(aes(word2, contribution, fill = n * score > 0),data = outside_result) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ word1, scales = "free") +
xlab("Words preceded by negation") +
ylab("Sentiment score * # of occurrences") +
theme_bw() +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) #5
View(inside_result)
inside<-order_bars_SE(set_words,"word1","word2","contribution")
ggplot(aes(word2, contribution, fill = n * score > 0),data = inside) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ word1, scales = "free") +
xlab("Words preceded by negation") +
ylab("Sentiment score * # of occurrences") +
theme_bw() +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) #5
ggplot(aes(word2, contribution, fill = n * score > 0),data = inside) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ word1, scales = "free") +
xlab("Words preceded by negation") +
ylab("Sentiment score * # of occurrences") +
theme_bw() +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) #5
View(inside)
ggplot(aes(barCategory, contribution, fill = n * score > 0),data = inside) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ word1, scales = "free") +
xlab("Words preceded by negation") +
ylab("Sentiment score * # of occurrences") +
theme_bw() +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) #5
order_bars_SE <- function(df, facetPanel, barCategory, value){
require(lazyeval)
df %>%
mutate_(barCategory = interp(~reorder(x, y), x = as.name(barCategory),
y = as.name(value))) %>%
group_by_(facetPanel) %>%
filter_(interp(~min_rank(desc(abs(x))) <= 10, x = as.name(value))) %>%
group_by_(facetPanel, barCategory) %>%
arrange_(interp(~desc(x), x = as.name(value))) %>%
ungroup() %>%
mutate_(barsRanked = interp(
~factor(paste(x, y, sep = "__"), levels = rev(paste(x, y, sep = "__"))),
x = as.name(barCategory), y = as.name(facetPanel)))
}
inside<-order_bars_SE(set_words,"word1","word2","contribution")
new<-order_bars_SE(set_words,"word1","word2","contribution")
View(new)
order_bars_SE <- function(df, facetPanel, barCategory, value){
require(lazyeval)
df %>%
mutate_(barCategory = interp(~reorder(x, y), x = as.name(barCategory),
y = as.name(value))) %>%
group_by_(facetPanel) %>%
filter_(interp(~min_rank(desc(abs(x))) <= 10, x = as.name(value))) %>%
group_by_(facetPanel, barCategory) %>%
arrange_(interp(~desc(x), x = as.name(value))) %>%
ungroup() %>%
mutate_(barsRanked = interp(
~factor(paste(x, y, sep = "__"), levels = rev(paste(x, y, sep = "__"))),
x = as.name(barCategory), y = as.name(facetPanel)))
}
new<-order_bars_SE(set_words,"word1","word2","contribution")
View(new)
order_bars_SE <- function(df, facetPanel, barCategory, value){
require(lazyeval)
df %>%
mutate_(barCategory = interp(~reorder(x, y), x = as.name(barCategory),
y = as.name(value))) %>%
group_by_(facetPanel) %>%
filter_(interp(~min_rank(desc(abs(x))) <= 10, x = as.name(value))) %>%
group_by_(facetPanel, barCategory) %>%
arrange_(interp(~desc(x), x = as.name(value))) %>%
ungroup() %>%
mutate_(barCategory = interp(
~factor(paste(x, y, sep = "__"), levels = rev(paste(x, y, sep = "__"))),
x = as.name(barCategory), y = as.name(facetPanel)))
}
new<-order_bars_SE(set_words,"word1","word2","contribution")
View(new)
View(set_words)
install.packages(c("backports", "BiodiversityR", "chron", "dendextend", "digest", "forcats", "git2r", "highcharter", "Hmisc", "htmlTable", "isdparser", "jsonlite", "knitr", "mclust", "nycflights13", "openssl", "plotrix", "psych", "Rcmdr", "Rcpp", "rgl", "rNOMADS", "rprojroot", "RSQLite", "shiny", "sjmisc", "sjPlot", "StanHeaders", "TH.data", "tidyverse", "vegan", "xml2"))
plot(cars)
# Chunk 1
plot(cars)
plot(cars)
knit_with_parameters('~/Documents/GitArchive/vv.Rmd')
plot(cars)
knit_with_parameters('~/Documents/GitArchive/rparms.Rmd')
knit_with_parameters('~/Documents/GitArchive/rparms.Rmd')
library(readr)
a <- read_csv(params$data)
library(readr)
a <- read_csv(params$data)
knit_with_parameters('~/Documents/GitArchive/rparms.Rmd')
knit_with_parameters('~/Documents/GitArchive/rparms.Rmd')
library(readr)
a <- read_csv(params$data)
knit_with_parameters('~/Documents/GitArchive/rparms.Rmd')
rmarkdown::render("rparms.Rmd", params = "ask")
rmarkdown::render("rparms.Rmd", params = "ask")
knit_with_parameters('~/Documents/GitArchive/rparms.Rmd')
rmarkdown::render("rparms.Rmd", params = "ask")
rmarkdown::render("rparms.Rmd", params = "ask")
rmarkdown::render("rparms.Rmd", params = "ask")
setwd("~/Documents/GitArchive/bigData/ISD")
# Hide code and messages
knitr::opts_chunk$set(echo = FALSE); knitr::opts_chunk$set(warning = FALSE)
# Loading libraries
library(lubridate) # for dates
library(tidyverse) # loading the tidyverse
raw.data <- read_delim("statTabsAgg.tsv","\t",
escape_double = FALSE, trim_ws = TRUE)
raw.data$yrs <-year(raw.data$date)
View(raw.data)
raw.data <- read_delim("statTabsAgg.tsv","\t",
escape_double = FALSE, trim_ws = TRUE)
raw.data$yrs <-year(raw.data$date)
# Chunk 1: setup
# Hide code and messages
knitr::opts_chunk$set(echo = FALSE); knitr::opts_chunk$set(warning = FALSE)
# Loading libraries
library(lubridate) # for dates
library(tidyverse) # loading the tidyverse
# Chunk 2: load_data
raw.data <- read_delim("statTabsAgg.tsv","\t",
escape_double = FALSE, trim_ws = TRUE)
raw.data$yrs <-year(raw.data$date)
# Chunk 1: setup
# Hide code and messages
knitr::opts_chunk$set(echo = FALSE); knitr::opts_chunk$set(warning = FALSE)
# Loading libraries
library(lubridate) # for dates
library(tidyverse) # loading the tidyverse
# Chunk 2: load_data
raw.data <- read_delim("statTabsAgg.tsv","\t",
escape_double = FALSE, trim_ws = TRUE)
# Chunk 3: data_processing
# extract years from dates
raw.data$yrs <-year(raw.data$date)
# making wind roses
pieces <- c(0,30,60,90,120,150,180,210,240,270,300,330)
raw.data$sgs <- findInterval(raw.data$wind_direction,pieces)
# remove missing and NA obs
raw.data$wind_direction[raw.data$wind_direction == 999] <- NA
raw.data$wind_speed[raw.data$wind_speed >= 999] <- NA
View(raw.data)
summary(raw.data)
?complete.cases
wind.samples <- raw.data %>% filter(complete.cases(.)
# extract years from dates
raw.data$yrs <-year(raw.data$date)
# making wind roses
pieces <- c(0,30,60,90,120,150,180,210,240,270,300,330)
raw.data$sgs <- findInterval(raw.data$wind_direction,pieces)
# identify missing values
raw.data$wind_direction[raw.data$wind_direction == 999] <- NA
raw.data$wind_speed[raw.data$wind_speed >= 999] <- NA
wind.samples <- raw.data %>% filter(complete.cases(.)
wind.samples <- raw.data %>% filter(complete.cases(.))
View(wind.samples)
install.packages("dygraphs")
# Chunk 1: setup
# Hide code and messages
knitr::opts_chunk$set(echo = FALSE); knitr::opts_chunk$set(warning = FALSE)
# Loading libraries
library(lubridate) # for dates
library(tidyverse) # loading the tidyverse
library(dygraphs)
# Chunk 2: load_data
raw.data <- read_delim("statTabsAgg.tsv","\t",
escape_double = FALSE, trim_ws = TRUE)
# Chunk 3: data_processing
# extract years from dates
raw.data$yrs <-year(raw.data$date)
# making wind roses
pieces <- c(0,30,60,90,120,150,180,210,240,270,300,330)
raw.data$sgs <- findInterval(raw.data$wind_direction,pieces)
# identify missing values
raw.data$wind_direction[raw.data$wind_direction == 999] <- NA
raw.data$wind_speed[raw.data$wind_speed >= 999] <- NA
# use only complete cases
wind.samples <- raw.data %>% filter(complete.cases(.))
# Chunk 4
dygraph(wind.samples$date, wind.samples$wind_speed]) %>% dyRangeSelector()
dygraph(wind.samples$date, wind.samples$wind_speed) %>% dyRangeSelector()
aa<-cbind(wind.samples$date,wind.samples$wind_speed)
dygraph(aa) %>% dyRangeSelector()
View(aa)
aa<-cbind(wind.samples[,2],wind.samples[,7])
dygraph(aa) %>% dyRangeSelector()
aa<-cbind(wind.samples[,2],wind.samples[,7]) %>% as.xts(.)
library(xts)
aa<-cbind(wind.samples[,2],wind.samples[,7]) %>% as.xts(.)
View(wind.samples)
str(wind.samples)
aa<-wind.samples %>%  as.xts(.$elevation,as.POSIXct(.$date),format="%Y%m%d")
as.POSIXct(wind.samples$date),format="%Y%m%d")
as.POSIXct(wind.samples$date,format="%Y%m%d")
raw.data %>% unite("new",date,time)
View(raw.data)
View(raw.data)
View(raw.data)
summary(raw.data)
now<-raw.data %>% unite("new",date,time)
View(now)
ab<-as.POSIXct(now$new,format="%Y%m%d%H%M")
now<-raw.data %>% unite("new",date,time,sep="")
ab<-as.POSIXct(now$new,format="%Y%m%d%H%M")
now<-raw.data %>% unite("new",date,time,sep="")
View(now)
ab<-as.POSIXct(now$new,format="%Y-%m-%d%H%M")
test<-cbind(now$wind_speed,ab)
test<-cbind(now[,7],ab)
test<-cbind(now[,6],ab)
dygraph(aa) %>% dyRangeSelector()
dygraph(test) %>% dyRangeSelector()
test<-cbind(ab,now[,6])
dygraph(test) %>% dyRangeSelector()
View(raw.data)
raw.data <- read_delim("statTabsAgg.tsv","\t",
escape_double = FALSE, trim_ws = TRUE)
raw.data %>% mutate(year=year(raw.data$date),month=month(raw.data$date))
View(raw.data)
raw.data %<>% mutate(year=year(raw.data$date),month=month(raw.data$date))
raw.data %>% mutate(year=year(raw.data$date),month=month(raw.data$date))
View(raw.data)
raw.data %>% mutate(year=year(raw.data$date),
month=month(raw.data$date)) %>%
unite("time",year,month,sep="-")
news<-raw.data %>% mutate(year=year(raw.data$date),
month=month(raw.data$date)) %>%
unite("time",year,month,sep="-")
View(news)
cc<-as.POSIXct(news$time,format="%Y-%m")
news<-raw.data %>% mutate(year=year(raw.data$date),
month=month(raw.data$date)) %>%
unite("times",year,month,sep="-")
cc<-as.POSIXct(news$times,format="%Y-%m")
raw.data <- read_delim("statTabsAgg.tsv","\t",
escape_double = FALSE, trim_ws = TRUE)
View(raw.data)
newss <- raw.data %>% separate(date,into=c("times"),sep=8)
View(newss)
raw.data <- read_delim("statTabsAgg.tsv","\t",
escape_double = FALSE, trim_ws = TRUE)
newss <- raw.data %>% separate(date,into=c("times"),sep=7)
View(newss)
raw.data <- read_delim("statTabsAgg.tsv","\t",
escape_double = FALSE, trim_ws = TRUE)
newss <- raw.data %>% separate(date,into=c("times","days"),sep=7)
View(newss)
cc<-as.POSIXct(newss$times,format="%Y-%m")
cc<-as.POSIXct(newss$times,format="%Y%m")
cc<-as.POSIXct(newss$times,format="%Y-%m")
strptime(newss$times, "%y%m")
raw.data <- read_delim("statTabsAgg.tsv","\t",
escape_double = FALSE, trim_ws = TRUE)
View(raw.data)
cc<-as.POSIXct(newss$date,format="%Y-%m-%d")
cc<-as.POSIXct(raw.data$date,format="%Y-%m-%d")
dat<-raw.data %>% mutate(year=year(raw.data$date),
month=month(raw.data$date))
times<-as.POSIXct(raw.data$date,format="%Y-%m-%d")
View(raw.data)
dat<-raw.data %>% mutate(year=year(raw.data$date),
month=month(raw.data$date)) %>%
unite("times",date,time,sep="-")
View(raw.data)
View(dat)
View(dat)
dat<-raw.data %>% mutate(year=year(raw.data$date),
month=month(raw.data$date)) %>%
unite("times",date,time,sep="-",remove = FALSE)
track<-as.POSIXct(dat$date,format="%Y-%m-%d")
View(dat)
track<-as.POSIXct(dat$time,format="%Y-%m-%d-%H%M")
dat<-raw.data %>% mutate(year=year(raw.data$date),
month=month(raw.data$date)) %>%
unite("times",date,time,sep="-",remove = FALSE)
track<-as.POSIXct(dat$times,format="%Y-%m-%d-%H%M")
View(dat)
# Chunk 1: setup
# Hide code and messages
knitr::opts_chunk$set(echo = FALSE); knitr::opts_chunk$set(warning = FALSE)
# Loading libraries
library(lubridate) # for dates
library(tidyverse) # loading the tidyverse
library(xts)
library(dygraphs)
# Chunk 2: load_data
raw.data <- read_delim("statTabsAgg.tsv","\t",
escape_double = FALSE, trim_ws = TRUE)
# Chunk 3: data_processing
dat<-raw.data %>% mutate(year=year(raw.data$date),
month=month(raw.data$date)) %>%
unite("times",date,time,sep="-",remove = FALSE)
rm(raw.data)
# make time scale for dygraphs
track<-as.POSIXct(dat$times,format="%Y-%m-%d-%H%M")
# making wind roses
pieces <- c(0,30,60,90,120,150,180,210,240,270,300,330)
dat$sgs <- findInterval(dat$wind_direction,pieces)
# identify missing values
dat$wind_direction[dat$wind_direction == 999] <- NA
dat$wind_speed[dat$wind_speed >= 999] <- NA
# use only complete cases
wind.samples <- dat %>% filter(complete.cases(.))
rm(dat)
View(wind.samples)
# Chunk 1: setup
# Hide code and messages
knitr::opts_chunk$set(echo = FALSE); knitr::opts_chunk$set(warning = FALSE)
# Loading libraries
library(lubridate) # for dates
library(tidyverse) # loading the tidyverse
library(xts)
library(dygraphs)
# Chunk 2: load_data
raw.data <- read_delim("statTabsAgg.tsv","\t",
escape_double = FALSE, trim_ws = TRUE)
# Chunk 3: data_processing
dat<-raw.data %>% mutate(year=year(raw.data$date),
month=month(raw.data$date)) %>%
unite("times",date,time,sep="-")
rm(raw.data)
# make time scale for dygraphs
track<-as.POSIXct(dat$times,format="%Y-%m-%d-%H%M")
# making wind roses
pieces <- c(0,30,60,90,120,150,180,210,240,270,300,330)
dat$sgs <- findInterval(dat$wind_direction,pieces)
# identify missing values
dat$wind_direction[dat$wind_direction == 999] <- NA
dat$wind_speed[dat$wind_speed >= 999] <- NA
# use only complete cases
wind.samples <- dat %>% filter(complete.cases(.))
rm(dat)
