unnest_tokens(bigram, text, token = "ngrams", n = 2)
bigrams_separated <- austen_bigrams %>%
separate(bigram, c("word1", "word2"), sep = " ")
AFINN <- get_sentiments("afinn")
negation_words <- c("not", "no", "never", "without")
negated_words <- bigrams_separated %>%
filter(word1 %in% negation_words) %>%
inner_join(AFINN, by = c(word2 = "word")) %>%
count(word1, word2, score, sort = TRUE) %>%
ungroup()
a<-negated_words %>%
mutate(contribution = n * score) %>%
mutate(word2 = reorder(word2, contribution)) %>%
group_by(word1) %>%
top_n(10, abs(contribution)) %>%
group_by(word1, word2) %>%                                    #1
arrange(desc(contribution)) %>%                               #2
ungroup() %>%                                                 #3
mutate(word2 = factor(paste(word2, word1, sep = "__"), levels = rev(paste(word2, word1, sep = "__"))))
order_bars <- function(df,facetPanel,barCategory,value){
df %>% mutate_(barCategory=reorder(barCategory,value)) %>%
group_by_(facetPanel) %>%
top_n(10,abs(value)) %>%
group_by_(facetPanel,barCategory) %>%
arrange_(desc(value)) %>%
ungroup_() %>%
mutate_(barCategory = factor(paste(barCategory,facetPanel, sep = "__"),
levels=rev(paste(barCategory,facetPanel,sep="__"))))
}
set_words<-negated_words %>%
mutate(contribution = n * score)
outside_result<- "set_words" %>%
mutate_("word2"=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_("word2" = factor(paste("word2","word1", sep = "__"),
levels=rev(paste("word2","word1",sep="__"))))
outside_result<- set_words %>%
mutate_("word2"=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_("word2" = factor(paste("word2","word1", sep = "__"),
levels=rev(paste("word2","word1",sep="__"))))
inside_result<-order_bars(set_words,"set_words$word1","set_words$word2","set_words$contribution")
inside_result<-order_bars(set_words,"word1","word2","contribution")
outside_result<- set_words %>%
mutate_(word2=reorder(word2,contribution)) %>%
group_by_(word1) %>%
top_n_(10,abs(contribution)) %>%
group_by_(word1,word2) %>%
arrange_(desc(contribution)) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2",contribution)) %>%
group_by_(word1) %>%
top_n_(10,abs(contribution)) %>%
group_by_(word1,word2) %>%
arrange_(desc(contribution)) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_(word1) %>%
top_n_(10,abs(contribution)) %>%
group_by_(word1,word2) %>%
arrange_(desc(contribution)) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs(contribution)) %>%
group_by_(word1,word2) %>%
arrange_(desc(contribution)) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_(word1,word2) %>%
arrange_(desc(contribution)) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_("word2" = factor(paste("word2","word1", sep = "__"),
levels=rev(paste("word2","word1",sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_("word2" = factor(paste("word2","word1", sep = "__"),
levels=rev(paste("word2","word1",sep="__"))))
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_("word2" = factor(paste("word2","word1", sep = "__"),
levels=rev(paste("word2","word1",sep="__"))))
order_bars_SE <- function(df, facetPanel, barCategory, value){
require(lazyeval)
df %>%
mutate_(barCategory = interp(~reorder(x, y), x = as.name(barCategory),
y = as.name(value))) %>%
group_by_(facetPanel) %>%
filter_(interp(~min_rank(desc(abs(x))) <= 10, x = as.name(value))) %>%
group_by_(facetPanel, barCategory) %>%
arrange_(interp(~desc(x), x = as.name(value))) %>%
ungroup() %>%
mutate_(barCategory = interp(
~factor(paste(x, y, sep = "__"), levels = rev(paste(x, y, sep = "__"))),
x = as.name(barCategory), y = as.name(facetPanel)))
}
inside_result<-order_bars_SE(set_words,"word1","word2","contribution")
View(inside_result)
View(a)
outside_result<- set_words %>%
mutate_(word2=reorder("word2","contribution")) %>%
group_by_("word1") %>%
top_n_(10,abs("contribution")) %>%
group_by_("word1","word2") %>%
arrange_(desc("contribution")) %>%
ungroup_() %>%
mutate_("word2" = factor(paste("word2","word1", sep = "__"),
levels=rev(paste("word2","word1",sep="__"))))
outside_result<- set_words %>%
mutate(word2=reorder(word2,contribution)) %>%
group_by_(word1) %>%
top_n_(10,abs(contribution)) %>%
group_by_(word1,word2) %>%
arrange_(desc(contribution)) %>%
ungroup_() %>%
mutate_(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
outside_result<- set_words %>%
mutate(word2=reorder(word2,contribution)) %>%
group_by(word1) %>%
top_n(10,abs(contribution)) %>%
group_by(word1,word2) %>%
arrange(desc(contribution)) %>%
ungroup() %>%
mutate(word2 = factor(paste(word2,word1, sep = "__"),
levels=rev(paste(word2,word1,sep="__"))))
View(outside_result)
View(inside_result)
View(outside_result)
View(inside_result)
set_words<-dput(set_words)
set<-dput(set_words)
ggplot(aes(word2, contribution, fill = n * score > 0),data = inside_result) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ word1, scales = "free") +
xlab("Words preceded by negation") +
ylab("Sentiment score * # of occurrences") +
theme_bw() +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) #5
ggplot(aes(word2, contribution, fill = n * score > 0),data = outside_result) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ word1, scales = "free") +
xlab("Words preceded by negation") +
ylab("Sentiment score * # of occurrences") +
theme_bw() +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) #5
View(inside_result)
inside<-order_bars_SE(set_words,"word1","word2","contribution")
ggplot(aes(word2, contribution, fill = n * score > 0),data = inside) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ word1, scales = "free") +
xlab("Words preceded by negation") +
ylab("Sentiment score * # of occurrences") +
theme_bw() +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) #5
ggplot(aes(word2, contribution, fill = n * score > 0),data = inside) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ word1, scales = "free") +
xlab("Words preceded by negation") +
ylab("Sentiment score * # of occurrences") +
theme_bw() +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) #5
View(inside)
ggplot(aes(barCategory, contribution, fill = n * score > 0),data = inside) +
geom_bar(stat = "identity", show.legend = FALSE) +
facet_wrap(~ word1, scales = "free") +
xlab("Words preceded by negation") +
ylab("Sentiment score * # of occurrences") +
theme_bw() +
coord_flip() +
scale_x_discrete(labels = function(x) gsub("__.+$", "", x)) #5
order_bars_SE <- function(df, facetPanel, barCategory, value){
require(lazyeval)
df %>%
mutate_(barCategory = interp(~reorder(x, y), x = as.name(barCategory),
y = as.name(value))) %>%
group_by_(facetPanel) %>%
filter_(interp(~min_rank(desc(abs(x))) <= 10, x = as.name(value))) %>%
group_by_(facetPanel, barCategory) %>%
arrange_(interp(~desc(x), x = as.name(value))) %>%
ungroup() %>%
mutate_(barsRanked = interp(
~factor(paste(x, y, sep = "__"), levels = rev(paste(x, y, sep = "__"))),
x = as.name(barCategory), y = as.name(facetPanel)))
}
inside<-order_bars_SE(set_words,"word1","word2","contribution")
new<-order_bars_SE(set_words,"word1","word2","contribution")
View(new)
order_bars_SE <- function(df, facetPanel, barCategory, value){
require(lazyeval)
df %>%
mutate_(barCategory = interp(~reorder(x, y), x = as.name(barCategory),
y = as.name(value))) %>%
group_by_(facetPanel) %>%
filter_(interp(~min_rank(desc(abs(x))) <= 10, x = as.name(value))) %>%
group_by_(facetPanel, barCategory) %>%
arrange_(interp(~desc(x), x = as.name(value))) %>%
ungroup() %>%
mutate_(barsRanked = interp(
~factor(paste(x, y, sep = "__"), levels = rev(paste(x, y, sep = "__"))),
x = as.name(barCategory), y = as.name(facetPanel)))
}
new<-order_bars_SE(set_words,"word1","word2","contribution")
View(new)
order_bars_SE <- function(df, facetPanel, barCategory, value){
require(lazyeval)
df %>%
mutate_(barCategory = interp(~reorder(x, y), x = as.name(barCategory),
y = as.name(value))) %>%
group_by_(facetPanel) %>%
filter_(interp(~min_rank(desc(abs(x))) <= 10, x = as.name(value))) %>%
group_by_(facetPanel, barCategory) %>%
arrange_(interp(~desc(x), x = as.name(value))) %>%
ungroup() %>%
mutate_(barCategory = interp(
~factor(paste(x, y, sep = "__"), levels = rev(paste(x, y, sep = "__"))),
x = as.name(barCategory), y = as.name(facetPanel)))
}
new<-order_bars_SE(set_words,"word1","word2","contribution")
View(new)
View(set_words)
library(readr)
mergedfile <- read_csv("~/Desktop/test/mergedfile.txt",
col_names = FALSE)
View(mergedfile)
library(readr)
joined <- read_csv("~/Desktop/test/joined.txt",
col_names = FALSE)
View(joined)
setwd("~/Desktop/test/ts")
setwd("~/Desktop/test/ts")
setwd("~/Documents/GitArchive/webApps")
knitr::opts_chunk$set(echo = TRUE)
# load names and data
input_seq <- read_csv("input.seq.txt",col_names = FALSE)
# make indices
single <- seq(1:nrow(input_seq)) # using indices instead of direct ref to df
# start Selenium via terminal before this step
# docker run -d -p 4445:4444 selenium/standalone-firefox:3.0.1
# make connection
remDr <-remoteDriver(remoteServerAddr = "localhost"
, port = 4445L
, browserName = "firefox")
knitr::opts_chunk$set(echo = TRUE)
# load function
source("stepperSeq.R")
# load names and data
input_seq <- read_csv("input.seq.txt",col_names = FALSE)
# make indices
single <- seq(1:nrow(input_seq)) # using indices instead of direct ref to df
# start Selenium via terminal before this step
# docker run -d -p 4445:4444 selenium/standalone-firefox:3.0.1
# make connection
remDr <-remoteDriver(remoteServerAddr = "localhost"
, port = 4445L
, browserName = "firefox")
knitr::opts_chunk$set(echo = TRUE)
# load function
source("stepperSeq.R")
# load names and data
input_seq <- read_csv("input.seq.txt",col_names = FALSE)
# make indices
single <- seq(1:nrow(input_seq)) # using indices instead of direct ref to df
# start Selenium via terminal before this step
# docker run -d -p 4445:4444 selenium/standalone-firefox:3.0.1
# make connection
remDr <-remoteDriver(remoteServerAddr = "localhost"
, port = 4445L
, browserName = "firefox")
knitr::opts_chunk$set(echo = TRUE)
# load function
source("stepperSeq.R")
# load names and data
input_seq <- read_csv("input.seq.txt",col_names = FALSE)
# make indices
single <- seq(1:nrow(input_seq)) # using indices instead of direct ref to df
# start Selenium via terminal before this step
# docker run -d -p 4445:4444 selenium/standalone-firefox:3.0.1
# make connection
remDr <-remoteDriver(remoteServerAddr = "localhost"
, port = 4445L
, browserName = "firefox")
knitr::opts_chunk$set(echo = TRUE)
# load function
source("stepperSeq.R")
# load names and data
input_seq <- read_csv("input.seq.txt",col_names = FALSE)
# make indices
single <- seq(1:nrow(input_seq)) # using indices instead of direct ref to df
# start Selenium via terminal before this step
# docker run -d -p 4445:4444 selenium/standalone-firefox:3.0.1
# make connection
remDr <-remoteDriver(remoteServerAddr = "localhost"
, port = 4445L
, browserName = "firefox")
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
cache=TRUE,
prompt=FALSE,
tidy=FALSE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
# load libraries
library(RSelenium)
library(rvest)
library(tidyverse)
# load function
source("stepperSeq.R")
# load names and data
input_seq <- read_csv("input.seq.txt",col_names = FALSE)
# make indices
single <- seq(1:nrow(input_seq)) # using indices instead of direct ref to df
# start Selenium via terminal before this step
# docker run -d -p 4445:4444 selenium/standalone-firefox:3.0.1
# make connection
remDr <-remoteDriver(remoteServerAddr = "localhost"
, port = 4445L
, browserName = "firefox")
# initialise
remDr$open()
# download files
multi.seq <-plyr::alply(single,1,stepFunction,df=input_seq) # returns an empty list :: OK
source('~/Documents/GitArchive/webApps/stepperScript.R')
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
cache=TRUE,
prompt=FALSE,
tidy=FALSE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
# load libraries
library(RSelenium)
library(rvest)
library(tidyverse)
# load function
source("stepperSeq.R")
# load names and data
input_seq <- read_csv("input.seq.txt",col_names = FALSE)
# make indices
single <- seq(1:nrow(input_seq)) # using indices instead of direct ref to df
# start Selenium via terminal before this step
# docker run -d -p 4445:4444 selenium/standalone-firefox:3.0.1
# make connection
remDr <-remoteDriver(remoteServerAddr = "localhost"
, port = 4445L
, browserName = "firefox")
# initialise
remDr$open()
# download files
multi.seq <-plyr::alply(single,1,stepFunction,df=input_seq) # returns an empty list :: OK
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
cache=TRUE,
prompt=FALSE,
tidy=FALSE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
# load libraries
library(RSelenium)
library(rvest)
library(tidyverse)
# load function
source("stepperSeq.R")
# load names and data
input_seq <- read_csv("input.seq.txt",col_names = FALSE)
# make indices
single <- seq(1:nrow(input_seq)) # using indices instead of direct ref to df
# start Selenium via terminal before this step
# docker run -d -p 4445:4444 selenium/standalone-firefox:3.0.1
# make connection
remDr <-remoteDriver(remoteServerAddr = "localhost"
, port = 4445L
, browserName = "firefox")
# initialise
remDr$open()
# download files
multi.seq <-plyr::alply(single,1,stepFunction,df=input_seq) # returns an empty list :: OK
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
cache=TRUE,
prompt=FALSE,
tidy=FALSE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
# load libraries
library(RSelenium)
library(rvest)
library(tidyverse)
# load function
source("stepperSeq.R")
# load names and data
input_seq <- read_csv("input/input.seq.txt",col_names = FALSE)
# make indices
single <- seq(1:nrow(input_seq)) # using indices instead of direct ref to df
# start Selenium via terminal before this step
# docker run -d -p 4445:4444 selenium/standalone-firefox:3.0.1
# make connection
remDr <-remoteDriver(remoteServerAddr = "localhost"
, port = 4445L
, browserName = "firefox")
# initialise
remDr$open()
# download files
multi.seq <-plyr::alply(single,1,stepFunction,df=input_seq) # returns an empty list :: OK
library(knitr)
library(rmdformats)
## Global options
options(max.print="75")
opts_chunk$set(echo=FALSE,
cache=TRUE,
prompt=FALSE,
tidy=FALSE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=75)
# load libraries
library(RSelenium)
library(rvest)
library(tidyverse)
# load function
source("stepperSeq.R")
# load names and data
input_seq <- read_csv("input/input.seq.txt",col_names = FALSE)
# make indices
single <- seq(1:nrow(input_seq)) # using indices instead of direct ref to df
# start Selenium via terminal before this step
# docker run -d -p 4445:4444 selenium/standalone-firefox:3.0.1
# make connection
remDr <-remoteDriver(remoteServerAddr = "localhost"
, port = 4445L
, browserName = "firefox")
# initialise
remDr$open()
# download files
multi.seq <-plyr::alply(single,1,stepFunction,df=input_seq) # returns an empty list :: OK
setwd("~/Documents/GitArchive/webApps/stepSequences")
setwd("~/Documents/GitArchive/webApps/stepSequences")
